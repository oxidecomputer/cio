on:
  push:
    paths:
      - '**.rs'
      - '*/Cargo.toml'
      - 'Cargo.lock'
      - .github/workflows/cargo-test.yml
      - rust-toolchain
  pull_request:
    paths:
      - '**.rs'
      - '*/Cargo.toml'
      - 'Cargo.lock'
      - .github/workflows/cargo-test.yml
      - rust-toolchain
  workflow_dispatch:
    inputs:
name: cargo test
jobs:
  cargotest:
    name: cargo test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Cleanup unused space
        shell: bash
        run: |
          set -x
          df -h /
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /opt/microsoft
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf /usr/local/.ghcup
          sudo rm -rf /usr/lib/jvm
          sudo rm -rf /usr/local/graalvm
          sudo rm -rf /usr/local/share/powershell
          sudo rm -rf /usr/share/swift
          df -h /
      - name: Set Swap Space
        uses: pierotofy/set-swap-space@master
        with:
          swap-size-gb: 10
      - uses: actions/setup-node@v3.4.1
      - name: Install asciidoctor, pandoc, and pdftotext
        shell: bash
        run: |
          sudo apt update -y && sudo apt install -y \
            asciidoctor \
            libusb-1.0-0-dev \
            pandoc \
            poppler-utils \
            ruby \
      - name: Install asciidoctor-pdf, asciidoctor-mermaid
        shell: bash
        run: |
          sudo gem install rouge
          sudo gem install asciidoctor-pdf -v 2.3.2
          sudo gem install asciidoctor-mermaid -v 0.4.1
          sudo npm install -g @mermaid-js/mermaid-cli

          mmdc --help
      - name: Install latest nightly
        uses: oxidecomputer/actions-rs_toolchain@oxide/master
        with:
            components: rustfmt, clippy
      - name: Install libusb
        shell: bash
        run: |
          sudo apt update -y && sudo apt install -y \
            libusb-1.0-0-dev
      - name: Cache github etags
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/.cache
          key: github-cache
      - name: Cache cargo registry
        uses: actions/cache@v3
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ github.ref }}
          restore-keys: |
            ${{ runner.os }}-cargo-registry-${{ github.ref }}
      - name: Cache cargo index
        uses: actions/cache@v3
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ github.ref }}
          restore-keys: |
            ${{ runner.os }}-cargo-index-${{ github.ref }}
      - name: Cache cargo build
        uses: actions/cache@v3
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-target-${{ github.ref }}
          restore-keys: |
            ${{ runner.os }}-cargo-build-target-${{ github.ref }}
      - name: Report pre-test remaining disk
        shell: bash
        run: |
          set -x
          df -h /
      - name: Run cargo test
        run: |
          cargo test -- --test-threads=1 --nocapture
        shell: bash
        env:
          RUST_LOG: trace
          RUST_BACKTRACE: 1
      - name: Report remaining disk
        if: always()
        shell: bash
        run: |
          set -x
          df -h /
      - name: Report /tmp
        if: always()
        shell: bash
        run: |
          ls -altr -R /tmp/asciidoc-rfd-render